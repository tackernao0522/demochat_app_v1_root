networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:15.7-alpine3.19
    container_name: db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./api/tmp/db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      API_DOMAIN: localhost:${FRONT_PORT}
    volumes:
      - ./api:/app
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:3000"
    networks:
      - app-network

  front:
    build:
      context: ./front
      args:
        WORKDIR: $WORKDIR
        API_URL: "http://localhost:$API_PORT" # 追加
    # コンテナで実行したいコマンド(CMD)
    command: yarn run dev
    volumes:
      - "./front:/$WORKDIR"
    ports:
      - "$FRONT_PORT:3000"
    depends_on:
      - api
    networks:
      - app-network
