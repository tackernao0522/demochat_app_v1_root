networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:15.7-alpine3.19
    container_name: db
    environment:
      TZ: UTC
      PGTZ: UTC
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./api/tmp/db:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      args:
        WORKDIR: /app
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      API_DOMAIN: "localhost:$FRONT_PORT"
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - "./api:/app"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "$API_PORT:3000"
    networks:
      - app-network

  front:
    build:
      context: ./front
      args:
        WORKDIR: /app
        API_URL: "http://localhost:$API_PORT"
    command: yarn run dev
    volumes:
      - "./front:/app"
    ports:
      - "$FRONT_PORT:3000"
    depends_on:
      api:
        condition: service_started
    networks:
      - app-network
